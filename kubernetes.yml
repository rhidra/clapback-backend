---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: _APP_NAME_
  labels:
    app: _APP_NAME_
spec:
  replicas: 1
  selector:
    matchLabels:
      app: _APP_NAME_

  # Pod template
  template:
    metadata:
      labels:
        app: _APP_NAME_
    spec:
      containers:
      - name: _APP_NAME_
        image: _CONTAINER_IMAGE_
        volumeMounts:
        - name: media-server
          mountPath: /usr/app/public
        livenessProbe:
          httpGet:
            path: /health
            port: 80
        readinessProbe:
          httpGet:
            path: /health
            port: 80

        # Environment variable to load secrets
        # See .prod-secrets.yaml uncommitted secret file
        env:
          - name: NODE_ENV
            valueFrom:
              secretKeyRef:
                name: _SECRET_
                key: NODE_ENV
          - name: PORT
            valueFrom:
              secretKeyRef:
                name: _SECRET_
                key: PORT
          - name: HOST_URL
            valueFrom:
              secretKeyRef:
                name: _SECRET_
                key: HOST_URL
          - name: SESSION_SECRET
            valueFrom:
              secretKeyRef:
                name: _SECRET_
                key: SESSION_SECRET
          - name: JWT_SECRET
            valueFrom:
              secretKeyRef:
                name: _SECRET_
                key: JWT_SECRET
          - name: MONGODB_URI
            valueFrom:
              secretKeyRef:
                name: _SECRET_
                key: MONGODB_URI
          - name: SMTP_HOST
            valueFrom:
              secretKeyRef:
                name: _SECRET_
                key: SMTP_HOST
          - name: SMTP_PORT
            valueFrom:
              secretKeyRef:
                name: _SECRET_
                key: SMTP_PORT
          - name: SMTP_USER
            valueFrom:
              secretKeyRef:
                name: _SECRET_
                key: SMTP_USER
          - name: SMTP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: _SECRET_
                key: SMTP_PASSWORD
      volumes:
      - name: media-server
        persistentVolumeClaim:
          claimName: media-server-pvc

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: _APP_NAME_
  annotations:
    # MUST BE A STATIC IP RESERVED !
    kubernetes.io/ingress.global-static-ip-name: _APP_NAME_-ip
  labels:
    app: _APP_NAME_
spec:
  backend:
    serviceName: _APP_NAME_
    servicePort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: _APP_NAME_
  labels:
    app: _APP_NAME_
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: _APP_NAME_
  type: NodePort

# PersistentVolumeClaim (PVC)
# Link a StorageClass 'fast' to a persistent volume
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-server-pvc
  annotations:
    volume.beta.kubernetes.io/storage-class: fast
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
